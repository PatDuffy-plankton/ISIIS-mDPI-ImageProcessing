//This macro requires the plugin StackAverage_.java and the Image Calculator Plus macro
////This macro produces a flat-fielded stack of mDPI images in the directory of your choosing.
//////Operates via the 'DolMicrobe Cruise Pipeline' which expects a director of raw shadowgraph images
//by Patrick I. Duffy
//Skidaway Institute of Oceanography, University of Georgia 2021
//Adapted from macro for ISIIS-imager by Adam T. Greer

//easy to change greyscale threshholding variables
low_thresh = 0;
high_thresh = 200;

//minimum ROI size you wish to segment as separate images with separate metadata
min_roi = 1029; 

//select minimum size (in pixels^2) of ROI-data you wish to acquire (this is ALL particle data)
min_pix = 132;
	//1px = 44um; therefore a 500um cutoff ESD = 132 px^2
    					     
// END USER-DEFINED VARIABLES //

//best to store folder-directories for averages and flatfields in the same parent; as in /parent/ROI/ and /parent/FF/
//directories where ROI images and metadata will be stored
outputDir = getDirectory('Choose ROI Output Directory'); 
output_ROImetadata = getDirectory('Choose ROI MetaData_text Directory');

output_files = getDirectory('Choose folder to store all Particle data from Images');

//directory where the raw shadowgraph images are stored
inputDir = getDirectory('Choose Directory with Flatfielded Images as input');

files = getFileList(inputDir); //makes a list of how many stacks of 100 images and their folder names
max = lengthOf(files);
f=1; //f is the stack# recording variable

//Doesn't matter what order images are loaded in since they are already flatfielded
for(i=1; i<max; i++){
   impath = inputDir+files[i];
   open(impath);
   ff_img = files[i];
   selectWindow(ff_img);
   hh = getHeight();
   ww = getWidth();
   //Setting the grayscale pixel value thresholds on the flat-field
   setThreshold(low_thresh, high_thresh, "Black & White");   
   //The following function chooses which parameters are recorded about Particles 
   run("Set Measurements...", "area mean standard bounding modal min centroid center perimeter fit shape feret's median skewness kurtosis limit stack display redirect=None decimal=3");  
    	//First particles >=1.6mm ESD are segmented and saved
	//size 1029 pixels^2 is 1.59mm ESD (1px=44 um)
    	run("Analyze Particles...", "size=min_roi-inf circularity=0-1 show=Nothing display clear include stack slice");       
    	saveAs("Results", output_ROImetadata+"/"+files[i]+".txt");
	//If a Particle is ID'd as satisfying the size & circularity threshold
   	 if(nResults > 0) {    
            //For each particle in the results table that are >1.59mm ESD
        	for (j=0; j<nResults; j++) {
       		 imagename = getResult("Label", j);
      		 xpos = getResult("BX", j);
         	ypos = getResult("BY", j);
         	xlength = getResult("Width", j);
        	 ylength = getResult("Height", j);                     
        	  //give the selection a buffer zone
        	  //the 2*buffer centers the ID'd particle 
       		  buffer = 25;
       		  xpos2 = xpos - buffer;
       		  xlength2 = xlength + (2*buffer);
       		  ypos2 = ypos - buffer;
       		  ylength2 = ylength + (2*buffer);        
       		 //if the length in x-direction hits edge of frame
       		  if(xpos2+xlength2 > ww) 
        		xlength2 = ww - xpos2;
       		  else
        		xlength2 = xlength2;        
      		   if(xpos2 < 0)
        		xpos2 = 0;
      		   else
        		xpos2 = xpos2;        
        	 if(ypos2+ylength2 > hh)
        		ylength2 = hh - ypos2;
      		   else
      		  	ylength2 = ylength2;        
       		  if(ypos2 < 0)
        		ypos2 = 0;
      		   else
        		ypos2 = ypos2;        
        	 selectWindow(ff_img);
        	 makeRectangle(xpos2, ypos2, xlength2, ylength2);
        	 run("Copy");
         	   //opens the ROI_rectangle in a new window
        	 run("Internal Clipboard");
         	selectWindow("Clipboard");
         	saveAs("Tiff", outputDir+files[i]+"_"+"_"+xpos+"_"+ypos+"_"+xlength+"_"+ylength);
          	  //closes the ROI image that was opened by Internal Clipboard
        	 run("Close");
       			 }
	 selectWindow("Results");
         run("Close");
    	}
    	//Now the flatfield will be scanned one more time for ALL particles above the min size threshold set earlier
	if(isOpen(ff_img)){
		selectWindow(ff_img);
    		run("Analyze Particles...", "size=min_pix-inf circularity=0-1 show=Nothing display clear include stack slice");       
    		if(nResults > 0) {
      		 //Saves the results of the Analyze Particles function in a .txt table labelled by the master-frame name
      		  saveAs("Results", output_files+"/"+files[i]+".txt");
		if (isOpen(ff_img)){
    			selectWindow(ff_img);
   			run("Close");
			}
    		selectWindow("Results");
    		run("Close");
    		} else {
			//selectWindow(ff_img);
   			run("Close"); 
    		}
	}
} //closes the StackAverage loop		


